<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Registration</title>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link rel="stylesheet" href="/styles/register.css">
</head>
<body>
    <div class="container">
        <h1>User Registration</h1>
        <form action="/register" method="post">
            <label for="username">Username:</label>
            <input type="text" id="username" name="username" required>
            <label for="password">Password:</label>
            <input type="password" id="password" name="password" required>
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required>
            <label for="firstName">First Name:</label>
            <input type="text" id="firstName" name="firstName">
            <label for="lastName">Last Name:</label>
            <input type="text" id="lastName" name="lastName">
            <label for="age">Age:</label>
            <input type="number" id="age" name="age" min="18">
            <label for="country">Country:</label>
            <input type="text" id="country" name="country">
            <label for="gender">Gender:</label>
            <select id="gender" name="gender">
                <option value="male">Male</option>
                <option value="female">Female</option>
                <option value="other">Other</option>
            </select>
            <button type="submit">Register</button>
        </form>
        <% if (registrationSuccess) { %>
            <p>Registration successful!</p>
            <form action="/login" method="get">
                <button class="login-button" type="submit">Login</button>
            </form>
        <% } %>      
    </div>

    <div class="chart-container">
        <canvas id="stockChart"></canvas>
    </div>

    <script>
        async function fetchAndRenderStockChart() {
            try {
                const response = await axios.get('https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=TSLA&apikey=LZ3T0PM9J36MFFMU');
                const data = response.data['Time Series (Daily)'];
                const dates = Object.keys(data);
                const closingPrices = dates.map(date => parseFloat(data[date]['4. close']));

                const ctx = document.getElementById('stockChart').getContext('2d');
                const stockChart = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: dates,
                        datasets: [{
                            label: 'Tesla Stock Price',
                            data: closingPrices,
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        legend: {
                            display: false
                        },
                        scales: {
                            xAxes: [{
                                type: 'time',
                                time: {
                                    parser: 'YYYY-MM-DD',
                                    tooltipFormat: 'll',
                                    unit: 'day',
                                    unitStepSize: 1,
                                    displayFormats: {
                                        'day': 'MMM DD'
                                    }
                                },
                                ticks: {
                                    fontColor: '#555'
                                }
                            }],
                            yAxes: [{
                                scaleLabel: {
                                    display: true,
                                    labelString: 'Stock Price (USD)'
                                },
                                ticks: {
                                    fontColor: '#555',
                                    beginAtZero: false,
                                    callback: function(value) {
                                        return '$' + value.toFixed(2);
                                    }
                                }
                            }]
                        }
                    }
                });
            } catch (error) {
                console.error('Error fetching stock data:', error);
            }
        }

        fetchAndRenderStockChart();
    </script>
</body>
</html>
